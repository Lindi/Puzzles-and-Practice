package projecteuler;

public class Problem2 {

	/**
	 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
	 * By starting with 1 and 2, the first 10 terms will be:
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
	 * find the sum of the even-valued terms.
	 * 
	 * Note: I derived that n = 33 by plugging in values to the equation
	 * Fn = PHI ^ n / sqrt(5)
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		int sum = 0 ;
		for ( int i = 0; i <= 33; i++ )
		{
			int ithFibonacciNumber =  fibonacci(i);
			sum += ( ithFibonacciNumber % 2 == 0 ? ithFibonacciNumber : 0 );
		}
		System.out.printf("Fibonacci(33): %d, Sum: %d", fibonacci(33), sum);
	}
	
	private static int fibonacci(int n) {
		if ( n < 2 )
		{
			return n ;
		}
		return fibonacci(n-1) + fibonacci(n-2);
	}

}
